// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level_1":
            case "level_1":return tiles.createTilemap(hex`32000a`, img`
..................................................
..................................................
..................2..................22...........
.........................2..........2..2..........
..........................2....22222....222.......
22....................22...2222............2222222
222...................222............22...........
2222...........2......222...........2222..........
222222222...222222....222..........2222222........
22222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile9], TileScale.Sixteen);
            case "level_2":
            case "level_2":return tiles.createTilemap(hex`32000a`, img`
..................................................
..................................................
..................................................
.........2222.....................................
....................................22............
..................................................
.......22................2...................22222
......2......222222.....22.......222222........222
.....22....2222222222.....22222..................2
22222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile9], TileScale.Sixteen);
            case "level_3":
            case "level_3":return tiles.createTilemap(hex`14001e00000000000000000000000000000000000000000000030000000000000000000000000000000000000101010101000000000600000000000000000005000000000201010101010000000600000000000500000000000000000002010101010000000000010000000000000000000000000002010101000000000000000000000000000000000000000000000000000101000000000000000000000000000000060100000201010100060000000000000000070101000000000000020101010106000000000102000000010000000000000000020101010101020000000506000000000000000000000000000000000000010101010100060000000000000000000000010000000000000101000000060000060001010102000000000000000201010101010101010200000000000000010000000000000000000000000000000700000002000000000000000000000000000000000000070001010000060000000600000000060705000100000002010101010101010101010101010100000000000000000000000000000000000000000500000000000100000000000000000000000005070500060001020100000000000000000000000001010101010202020101000000000000000000000000000000000000000000010600000000000000000000000000000000000002010000000006000700000000000000000000070202010101010101010000000000000000000000000000000000000000000000000100000000000600000000000000000000040001020000000000070000000000000006000101010202010101010101010101010101010101`, img`
....................
....................
22222...............
....222222..........
.........22222.....2
.............2222...
....................
..22................
2..2222..........222
......22222.....22..
.2........2222222...
....................
22222.............2.
.....22........2222.
......2222222222....
...2................
...2................
..2.22............2.
.2...222222222222222
....................
......2.............
2....222............
2222222222..........
...........2........
...........22.......
...........222222222
....................
....2...............
...22.....2.........
22222222222222222222
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile9], TileScale.Sixteen);
            case "level_4":
            case "level_4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile3,myTiles.tile5,myTiles.tile9,myTiles.tile10], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "grass":
            case "tile1":return tile1;
            case "dirt":
            case "tile2":return tile2;
            case "finish":
            case "tile3":return tile3;
            case "checkpoint":
            case "tile4":return tile4;
            case "start":
            case "tile5":return tile5;
            case "supplyCrate":
            case "tile6":return tile6;
            case "enemySpawn":
            case "tile7":return tile7;
            case "emptyTile":
            case "tile8":return tile8;
            case "jumpPad":
            case "tile9":return tile9;
            case "bossSpawn":
            case "tile10":return tile10;
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
